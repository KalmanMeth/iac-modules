tosca_definitions_version: tosca_simple_yaml_1_3

imports:
  - output_hpc.yaml

# capability_types:
#   sodalite.capabilities.hpc.ConfiguredJob:
#     derived_from: tosca.capabilities.Root

#   sodalite.capabilities.hpc.StartedJob:
#     derived_from: tosca.capabilities.Root
    
node_types:

  sodalite.nodes.hpc.job.torque.configuration.base:
    description: >
      torque job configuration
    derived_from: tosca.nodes.SoftwareComponent
    requirements:
      - host:
          node: sodalite.nodes.hpc.wm.torque
          capability: tosca.capabilities.Compute
          relationship: tosca.relationships.HostedOn
    properties:
      name:
        type: string
        description: Name of the job
        required: true
      script:
        type: string
        description: >
          Job script that will be wrapped with j2 template to provide a PBS job script, 
          Ansible can process it with the template module
        required: true
      workspace:
        type: string
        description: Location of the sources and the job script
        default: ~/
      enable_audit:
        type: boolean
        default: false
      env:
        type: map
        required: false
        default: null
    attributes:
      job_id:
        type: string
    capabilities:
      configured_job:
        # type: sodalite.capabilities.hpc.ConfiguredJob
        type: tosca.capabilities.Root
        valid_source_types: [sodalite.nodes.hpc.job.torque]

  sodalite.nodes.hpc.job.torque.configuration: 
    description: >
      torque job configuration
    derived_from: sodalite.nodes.hpc.job.torque.configuration.base
    properties:
      name:
        type: string
        description: Name of the job
        required: true
      script:
        type: string
        description: >
          Job script that will be wrapped with j2 template to provide a PBS job script, 
          Ansible can process it with the template module
        required: true
      queue:
        type: string
        description: >
          Select queue for the job.
          Infrastructure specific - default and constraints values MUST be provided by Resource Expert
        required: false
        default: ""
        constraints:
          - valid_values: [ "batch", "ssd", "gpu", "cpu" ]
      scratch:
        type: string
        description: >
          Select scratch (temporary, fast storage) path for the job, if available.
          Infrastructure specific - default value MUST be provided by Resource Expert
        required: false
        default: "/workspace"
      workspace:
        type: string
        description: Location of the sources and the job script
        default: ~/
      email:
        type: string
        description: >
          Job status will be notified to this email
        default: ""
      nb_nodes:
        type: integer
        description: >
          Number of requested nodes if node name is not specified
        default: 1
        required: false
      ppn:
        type: integer
        description: >
          Number of processes per node
        default: 1
      gpus:
        type: integer
        description: >
          Number of requested GPUs
        default: 0
      walltime:
        type: string
        description: >
          Expected time of execution
          FORMAT: HH:MM:SS
        required: true
      enable_audit:
        type: boolean
        default: false
      env:
        type: map
        required: false
        default: null
    attributes:
      job_id:
        type: string
      audit:
        type: string
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          create:
            inputs:
              # attribute "public_address" is internal to get a host, but we need to fetch it in playbooks
              wm_public_address: { default: { get_attribute: [SELF, host, public_address] } }
              wm_username: { default: { get_attribute: [SELF, host, username] } }
              wm_keypath: { default: { get_attribute: [SELF, host, ssh-key] } }
              # Conditionals or default values will help to get rid of properties that are not used in playbooks
              job_name: { default: { get_property: [SELF, name] } }
              job_script: { default: { get_property: [SELF, script] } }
              job_queue: { default: { get_property: [SELF, queue] } }
              job_scratch: { default: { get_property: [SELF, scratch] } }
              job_workspace: { default: { get_property: [SELF, workspace] } }
              job_email: { default: { get_property: [SELF, email] } }
              job_nb_nodes: { default: { get_property: [SELF, nb_nodes] } }
              job_ppn: { default: { get_property: [SELF, ppn] } }
              job_gpus: { default: { get_property: [SELF, gpus] } }
              job_walltime: { default: { get_property: [SELF, walltime] } }
              job_enable_audit: { default: { get_property: [SELF, enable_audit] } }
            implementation: 
              primary: torque-job/playbooks/create.yml
              dependencies: 
                - torque-job/templates/audit.sh.j2
                - torque-job/templates/job.pbs.j2
                - torque-job/artifacts/jobs


  sodalite.nodes.hpc.job.torque.configuration.node: 
    description: >
      torque job configuration
    derived_from: sodalite.nodes.hpc.job.torque.configuration
    requirements:
      - job_node:
          node: tosca.nodes.Compute
          capability: tosca.capabilities.Compute
          relationship: tosca.relationships.DependsOn
          occurrences: [1, 1]          
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          create:
            inputs:
              # attribute "public_address" is internal to get a host, but we need to fetch it in playbooks
              wm_public_address: { default: { get_attribute: [SELF, host, public_address] } }
              wm_username: { default: { get_attribute: [SELF, host, username] } }
              wm_keypath: { default: { get_attribute: [SELF, host, ssh-key] } }
              # Conditionals or default values will help to get rid of properties that are not used in playbooks
              job_name: { default: { get_property: [SELF, name] } }
              job_script: { default: { get_property: [SELF, script] } }
              job_workspace: { default: { get_property: [SELF, workspace] } }
              job_email: { default: { get_property: [SELF, email] } }
              job_node_name: { default: { get_property: [SELF, job_node, name] } }
              job_ppn: { default: { get_property: [SELF, ppn] } }
              job_gpus: { default: { get_property: [SELF, gpus] } }
              job_walltime: { default: { get_property: [SELF, walltime] } }
              job_enable_audit: { default: { get_property: [SELF, enable_audit] } }
            implementation: 
              primary: torque-job/playbooks/create.yml
              dependencies: 
                - torque-job/templates/audit.sh.j2
                - torque-job/templates/job.pbs.j2
                - torque-job/artifacts/jobs
     
  sodalite.nodes.hpc.job.torque.preconfigured:
    description: >
      torque job configuration
    derived_from: sodalite.nodes.hpc.job.torque.configuration.base
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          create:
            inputs:
              # attribute "public_address" is internal to get a host, but we need to fetch it in playbooks
              wm_public_address: { default: { get_attribute: [SELF, host, public_address] } }
              wm_username: { default: { get_attribute: [SELF, host, username] } }
              wm_keypath: { default: { get_attribute: [SELF, host, ssh-key] } }
              # Conditionals or default values will help to get rid of properties that are not used in playbooks
              job_name: { default: { get_property: [SELF, name] } }
              job_script: { default: { get_property: [SELF, script] } }
              job_workspace: { default: { get_property: [SELF, workspace] } }
              job_enable_audit: { default: { get_property: [SELF, enable_audit] } }
            implementation: 
              primary: torque-job/playbooks/create-preconfigured.yml
              dependencies: 
                - torque-job/templates/audit.sh.j2
                - torque-job/templates/preconfigured-job.pbs.j2
                - torque-job/artifacts/jobs

  sodalite.nodes.hpc.job.torque: 
    description: >
      torque job 
    derived_from: tosca.nodes.SoftwareComponent
    requirements:
      - host:
          node: sodalite.nodes.hpc.wm.torque
          capability: tosca.capabilities.Compute
          # relationship: sodalite.relationships.jobHostedOn
          relationship: tosca.relationships.HostedOn
      - configured_job:
          node: sodalite.nodes.hpc.job.torque.configuration.base
          # capability: sodalite.capabilities.hpc.ConfiguredJob 
          capability: tosca.capabilities.Root
          relationship: tosca.relationships.DependsOn    
    attributes:
      job_id:
        type: string
      job_walltime:
        type: string
      job_name:
        type: string
      job_workspace:
        type: string
      job_enable_audit:
        type: boolean
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:  
          configure:
            inputs:
              wm_public_address: { default: { get_attribute: [SELF, host, public_address] } }
              wm_username: { default: { get_attribute: [SELF, host, username] } }
              wm_keypath: { default: { get_attribute: [SELF, host, ssh-key] } }
              job_workspace: { default: { get_property: [SELF, configured_job, workspace] } }
            implementation: torque-job/playbooks/configure.yml
          start:
            inputs:
              wm_public_address: { default: { get_attribute: [SELF, host, public_address] } }
              wm_username: { default: { get_attribute: [SELF, host, username] } }
              wm_keypath: { default: { get_attribute: [SELF, host, ssh-key] } }
              job_name: { default: { get_property: [SELF, configured_job, name] } }
              job_workspace: { default: { get_property: [SELF, configured_job, workspace] } }
              job_env: { default: { get_property: [SELF, configured_job, env] } }
              job_enable_audit: { default: { get_property: [SELF, configured_job, enable_audit] } }
            implementation: torque-job/playbooks/start.yml
    capabilities:
      job:
        # type: sodalite.capabilities.hpc.StartedJob
        type: tosca.capabilities.Root
        valid_source_types: [sodalite.nodes.hpc.job.torque.result]            

  sodalite.nodes.hpc.job.torque.result: 
    description: >
      torque job result
    derived_from: tosca.nodes.SoftwareComponent
    requirements:
      - host:
          node: sodalite.nodes.hpc.wm.torque
          capability: tosca.capabilities.Compute
          relationship: tosca.relationships.HostedOn
      - job:
          node: sodalite.nodes.hpc.job.torque
          # capability: sodalite.capabilities.hpc.StartedJob 
          capability: tosca.capabilities.Root
          relationship: tosca.relationships.DependsOn   
    properties:
      monitor_period:
        type: integer
        default: 10
      monitor_retries_headroom:
        type: integer
        default: 2
      enable_audit:
        type: boolean
        default: false
    attributes:
      job_id:
        type: string
        default: ""
      audit:
        type: string
        default: ""
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          start:
            inputs:
              wm_public_address: { default: { get_attribute: [SELF, host, public_address] } }
              wm_username: { default: { get_attribute: [SELF, host, username] } }
              wm_keypath: { default: { get_attribute: [SELF, host, ssh-key] } }
              job_id: { default: { get_attribute: [SELF, job, job_id] } }
              job_name: { default: { get_attribute: [SELF, job, job_name] } }
              job_workspace: { default: { get_attribute: [SELF, job, job_workspace] } }
              job_walltime: { default: { get_attribute: [SELF, job, job_walltime] } }
              #job_walltime: { default: { get_property: [SELF, job, configured_job, walltime] } }
              job_monitor_period: { default: { get_property: [SELF, monitor_period] } }
              job_monitor_retries_headroom: { default: { get_property: [SELF, monitor_retries_headroom] } }
              job_enable_audit: { default: { get_attribute: [SELF, job, job_enable_audit] } }
            implementation: torque-job/playbooks/check.yml      

# relationship_types:

#   sodalite.relationships.jobHostedOn: # currently does nothing
#     derived_from: tosca.relationships.HostedOn
#     interfaces:
#       Configure:
#         operations:
#           add_source:
#             inputs:
#               # attribute "public_address" is internal to get a host, but we need to fetch it in playbooks
#               wm_public_address: { default: { get_attribute: [SELF, host, public_address] } }
#               wm_username: { default: { get_attribute: [SELF, host, username] } }
#               wm_keypath: { default: { get_attribute: [SELF, host, ssh-key] } }
#               # Conditionals or default values will help to get rid of properties that are not used in playbooks
#               job_name: { default: { get_property: [SELF, name] } }
#             implementation:
#               primary: torque-job/playbooks/dummy-relation-interface.yml