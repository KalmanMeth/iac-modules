---
- hosts: all
  gather_facts: no
  tasks:
    - name: >
        Create temporary inventory for wm, 
        since opera requires internal envvars to access the target. 
        Need more examples to access static nodes without specifying them in the inventory file
      add_host:
        name: wm
        groups: wm
        ansible_host: "{{ wm_public_address }}"
        ansible_user: "{{ wm_username }}"
        ansible_ssh_private_key_file: "{{ wm_keypath }}"
        ansible_ssh_common_args: >
          -o IdentitiesOnly=yes
          -o BatchMode=yes
          -o UserKnownHostsFile=/dev/null
          -o StrictHostKeyChecking=no

- hosts: wm # should be ansible module for Torque to handle jobs and their states
  gather_facts: yes
  vars:
    job_workspace_path: '{{ ( ( job_workspace != None ) | ternary(job_workspace, ansible_env.HOME) ) | replace("~", ansible_env.HOME) }}'
  tasks:
    - name: Submit the job
      shell: qsub -V {{ job_name }}.pbs
      args:
        chdir: "{{ job_workspace_path }}"
      register: job
      environment: "{{ job_env if job_env is defined }}"

    - name: Saving job_id
      set_fact:
        job_id: "{{ job.stdout }}"

    - name: Obtain walltime
      shell: qstat -f {{ job_id }} | grep 'Resource_List.walltime' | egrep -o '[^ ]+$'
      register: walltime_result

    - name: Obtain job name
      shell: qstat -f {{ job_id }} | grep 'Job_Name' | egrep -o '[^ ]+$'
      register: job_name_result

    - name: Set attribute
      set_stats:
        data:
          job_id: "{{ job_id }}"
          job_name: "{{ job_name_result.stdout }}"
          job_walltime: "{{ walltime_result.stdout }}"
          job_workspace: "{{ job_workspace_path }}"
          job_enable_audit: "{{ job_enable_audit }}"

