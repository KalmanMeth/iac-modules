tosca_definitions_version: tosca_simple_yaml_1_3 

data_types: 

  sodalite.datatypes.AWS.SecurityRule:  
    derived_from: tosca.datatypes.Root 
    properties:  
      proto:  
        required: True 
        type: string 
        default: tcp 
        constraints:  
          - valid_values: ['tcp', 'udp', 'icmp'] 
      from_port:  
        required: True 
        type: tosca.datatypes.network.PortDef 
      to_port:  
        type: tosca.datatypes.network.PortDef 
        required: True 
      cidr_ip:  
        default: 0.0.0.0/0 
        required: True 
        type: string 
      direction:  
        default: "ingress"
        type: string 
        constraints:  
          - valid_values: ['ingress', 'egress'] 

node_types:        

  sodalite.nodes.AWS.SecurityRules:  
    derived_from: tosca.nodes.Root 
    properties:  
      group_name:  
        description: Name of the security group in AWS. 
        required: True 
        type: string 
      rules:  
        required: False 
        constraints:  
          - min_length: 1 
        type: list 
        entry_schema:  
          type: sodalite.datatypes.AWS.SecurityRule 
      group_description:  
        description: Description of the security group in AWS. 
        required: True 
        type: string 
      vpc_id:
        description: ID of the VPC to create the group in.
        required: True 
        type: string  
      region:
        description: The AWS region to use.
        required: False 
        type: string     
      aws_access_key:
        description: The AWS region to use.
        required: False 
        type: string   
      aws_secret_key:
        description: The AWS region to use.
        required: False 
        type: string                               
    attributes:
      group_id:  
        description: ID of the security group in AWS. 
        type: string           
    interfaces:  
      Standard:  
        type: tosca.interfaces.node.lifecycle.Standard   
        operations:
          create:  
            implementation: 
              primary: playbooks/security_rule_create.yml 
            inputs:  
              rules:                  { type: string, default: { get_property: [ SELF, rules  ] } } 
              vpc_id:                 { type: string, default: { get_property: [ SELF, vpc_id  ] } } 
              region:                 { type: string, default: { get_property: [ SELF, region  ] } } 
              aws_access_key:         { type: string, default: { get_property: [ SELF, aws_access_key  ] } } 
              aws_secret_key:         { type: string, default: { get_property: [ SELF, aws_secret_key  ] } } 
              group_name:             { type: string, default: { get_property: [ SELF, group_name         ] } } 
              group_description:      { type: string, default: { get_property: [ SELF, group_description  ] } } 
          delete:  
            implementation: 
              primary: playbooks/security_rule_delete.yml 
            inputs:  
              group_id:               { type: string, default: { get_attribute: [ SELF, group_id         ] } }
              aws_access_key:         { type: string, default: { get_property: [ SELF, aws_access_key  ] } } 
              aws_secret_key:         { type: string, default: { get_property: [ SELF, aws_secret_key  ] } } 
              vpc_id:                 { type: string, default: { get_property: [ SELF, vpc_id  ] } } 
              region:                 { type: string, default: { get_property: [ SELF, region  ] } } 
         
      